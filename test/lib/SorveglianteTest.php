<?php

require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__) . '/../../lib/Sorvegliante.php';

/**
 * Test class for Sorvegliante.
 * Generated by PHPUnit on 2010-12-15 at 19:40:49.
 */
class SorveglianteTest extends PHPUnit_Framework_TestCase {

	/**
	 * @var    Sorvegliante
	 * @access protected
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 *
	 * @access protected
	 */
	protected function setUp() {
		$this->object = new Sorvegliante('Giustino', 'Borzacchiello', 'qwerty', 1);
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 *
	 * @access protected
	 */
	protected function tearDown() {
		
	}

	/**
	 * @todo Implement testGetMatricola().
	 */
	public function testGetMatricola() {
		$result = $this->object->getMatricola();
		$expected = 1;
		$this->assertEquals($result, $expected);
	}

	/**
	 * @todo Implement testGetNome().
	 */
	public function testGetNome() {
		$result = $this->object->getNome();
		$expected = 'Giustino';
		$this->assertEquals($result, $expected);
	}

	/**
	 * @todo Implement testGetCognome().
	 */
	public function testGetCognome() {
		$result = $this->object->getCognome();
		$expected = 'Borzacchiello';
		$this->assertEquals($result, $expected);
	}

	/**
	 * @todo Implement testSetMatricola().
	 */
	public function testSetMatricola() {
		$expected = 2;
		$this->object->setMatricola(2);
		$result = $this->object->getMatricola();
		$this->assertEquals($result, $expected);
	}

	/**
	 * @todo Implement testSetNome().
	 */
	public function testSetNome() {
		$expected = 'Valeria';
		$this->object->setNome('Valeria');
		$result = $this->object->getNome();
		$this->assertEquals($result, $expected);
	}

	/**
	 * @todo Implement testSetCognome().
	 */
	public function testSetCognome() {
		$expected = 'Marolda';
		$this->object->setCognome('Marolda');
		$result = $this->object->getCognome();
		$this->assertEquals($result, $expected);
	}

	/**
	 * @todo Implement testSetPassword().
	 */
	public function testSetPassword() {
		$expected = sha1('1234');
		$this->object->setPassword('1234');
		$result = $this->object->getPassword();
		$this->assertEquals($result, $expected);
	}

	/**
	 * @todo Implement testFind_by_id().
	 */
	public function testFind_by_id() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				  'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement testFindAll().
	 */
	public function testFindAll() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				  'This test has not been implemented yet.'
		);
	}

	/**
	 * @todo Implement test__toString().
	 */
	public function test__toString() {
		$result = $this->object->__toString();
		$expected = $this->object->getMatricola() . ' ' . $this->object->getNome() . ' ' . $this->object->getCognome();
		$this->assertEquals($result, $expected);
	}

	/**
	 * @todo Implement testSave().
	 */
	public function testSave() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				  'This test has not been implemented yet.'
		);
	}

}

?>
